{"version":3,"sources":["Context.js","ResultPanel.js","Increment.js","App.js","index.js"],"names":["Context","React","createContext","ResultPanel","props","state","count","className","Consumer","Component","Increment","handleAdd","handleSub","onClick","App","setState","Provider","value","this","contextType","MyContext","rootElement","document","getElementById","ReactDOM","render"],"mappings":"sKAEeA,G,KADCC,IAAMC,iB,OCoBPC,E,kDAjBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,GAHQ,E,0CAMnB,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAUC,SAAX,UACG,gBAAGF,EAAH,EAAGA,MAAH,OAAe,0CAAaA,c,GAXbL,IAAMQ,WCqBjBC,E,kDApBb,aAAe,wC,0CAGf,WACE,OACE,qBAAKH,UAAU,MAAf,SACE,cAAC,EAAUC,SAAX,UACG,gBAAGG,EAAH,EAAGA,UAAWC,EAAd,EAAcA,UAAd,OACC,gCACE,wBAAQC,QAASF,EAAjB,eAEA,wBAAQE,QAASD,EAAjB,2B,GAZUX,IAAMQ,WCExBK,E,kDACJ,aAAe,IAAD,8BACZ,gBAKFH,UAAY,WACV,EAAKI,SAAS,CACZT,MAAO,EAAKD,MAAMC,MAAQ,KARhB,EAWdM,UAAY,WACV,EAAKG,SAAS,CACZT,MAAO,EAAKD,MAAMC,MAAQ,KAX5B,EAAKD,MAAQ,CACXC,MAAO,GAHG,E,0CAgBd,WAAU,IAAD,OACP,OACE,qBAAKC,UAAU,MAAf,SACE,eAAC,EAAUS,SAAX,CACEC,MAAO,CACLX,MAAOY,KAAKb,MAAMC,MAClBK,UAAW,kBAAM,EAAKA,aACtBC,UAAW,kBAAM,EAAKA,cAJ1B,UAOE,cAAC,EAAD,IACA,cAAC,EAAD,a,GA5BQX,IAAMQ,WAmCxBK,EAAIK,YAAcC,EACHN,QCpCTO,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFJ,I","file":"static/js/main.8db194cb.chunk.js","sourcesContent":["import React from \"react\";\r\nconst Context = React.createContext();\r\nexport default Context;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport MyContext from \"./Context\";\r\nclass ResultPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      count: 0\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <MyContext.Consumer>\r\n          {({ count }) => <h1>counter {count}</h1>}\r\n        </MyContext.Consumer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultPanel;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport MyContext from \"./Context\";\r\nclass Increment extends React.Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <MyContext.Consumer>\r\n          {({ handleAdd, handleSub }) => (\r\n            <div>\r\n              <button onClick={handleAdd}>+</button>\r\n\r\n              <button onClick={handleSub}>-</button>\r\n            </div>\r\n          )}\r\n        </MyContext.Consumer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Increment;\r\n","import React from \"react\";\nimport \"./styles.css\";\nimport ResultPanel from \"./ResultPanel\";\nimport Increment from \"./Increment\";\nimport MyContext from \"./Context\";\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      count: 1\n    };\n  }\n  handleAdd = () => {\n    this.setState({\n      count: this.state.count + 1\n    });\n  };\n  handleSub = () => {\n    this.setState({\n      count: this.state.count - 1\n    });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <MyContext.Provider\n          value={{\n            count: this.state.count,\n            handleAdd: () => this.handleAdd(),\n            handleSub: () => this.handleSub()\n          }}\n        >\n          <ResultPanel />\n          <Increment />\n        </MyContext.Provider>\n      </div>\n    );\n  }\n}\n\nApp.contextType = MyContext;\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}